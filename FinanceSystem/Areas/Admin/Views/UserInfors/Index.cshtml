@model IEnumerable<UserViewModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
	ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using FinanceSystem.Areas.Admin.Models;
@using FinanceSystem.Areas.Identity.Data;
@using FinanceSystem.Data;
@using Microsoft.AspNetCore.Mvc.Rendering
@{
	var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
}
<div class="xl:w-72 w-48 flex-shrink-0 border-r border-gray-200 dark:border-gray-800 h-full overflow-y-auto lg:block hidden p-5">
	<div class="text-xs text-gray-400 tracking-wider">USERS</div>
	<div class="relative mt-2">
		<input type="text" class="pl-8 h-9 bg-transparent border border-gray-300 dark:border-gray-700 dark:text-white w-full rounded-md text-sm" placeholder="Search" />
		<svg viewBox="0 0 24 24" class="w-4 absolute text-gray-400 top-1/2 transform translate-x-0.5 -translate-y-1/2 left-2" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round">
			<circle cx="11" cy="11" r="8"></circle>
			<line x1="21" y1="21" x2="16.65" y2="16.65"></line>
		</svg>
	</div>
	<div class="space-y-4 mt-3">
		@foreach (var item in Model)
		{
			
				var firstUserId = item.FirstUser?.Id;
			
			<a href="@Url.Action("Details", "UserInfors", new { id = item.UserInfor.Id })">
				<button class="bg-white p-3 w-full flex flex-col rounded-md dark:bg-gray-800 shadow">
					<div class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-white pb-2 mb-2 xl:border-b border-gray-200 border-opacity-75 dark:border-gray-700 w-full">

						<img src="@item.UserInfor.Image" class="w-7 h-7 mr-2 rounded-full" alt="profile" />
						@item.User.UserName
					</div>
					<div class="flex items-center w-full">
						@{
							decimal balance = 0;
						}

						@{
							foreach (var wallet in item.Wallets)
							{
								balance += wallet.Balance;
							}
						}
						<div class="text-xs py-1 px-2 leading-none dark:bg-gray-900 bg-blue-100 text-blue-500 rounded-md">Design</div>
						<div class="ml-auto text-xs text-gray-500">@String.Format(format, "{0:c0}", balance)</div>

					</div>

				</button>
			</a>

		}

	</div>
</div>
@{
	var userViewModelList = new List<UserViewModel> { Model.First() };
}
<div class="flex-grow bg-white dark:bg-gray-900 overflow-y-auto">
	@*@{
	var firstUserId = Model.FirstOrDefault()?.UserInfor.Id;
	}
	@Html.RenderPartial("_Details",  Model.FirstOrDefaultAsync(), new ViewDataDictionary { { "UserId", firstUserId } })*@
	@{
		var userId = ViewData["UserId"];
	}
	@await Html.PartialAsync("_Details", null, new ViewDataDictionary(ViewData) { { "UserId", userId } });


</div>
